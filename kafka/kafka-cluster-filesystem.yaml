# This configuration is based on the production-ready 'kafka-persistent.yaml'
# and adds Tiered Storage capability using the Aiven plugin, strictly following
# the official Strimzi blog post's methodology.

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: controller
  labels:
    strimzi.io/cluster: kafka-cluster
spec:
  replicas: 3
  roles:
    - controller
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 20Gi
        class: alicloud-disk-essd
        deleteClaim: false
  template:
    pod:
      metadata:
        annotations:
          alibabacloud.com/ram-role: "dev-ack-oss"
    kafkaContainer:
      env:
        - name: JAVA_TOOL_OPTIONS
          value: "--add-modules=jdk.httpserver "

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: broker
  labels:
    strimzi.io/cluster: kafka-cluster
spec:
  replicas: 3
  roles:
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 20Gi
        class: alicloud-disk-essd
        deleteClaim: false
  template:
    pod:
      volumes:
        - name: tiered-storage-oss
          persistentVolumeClaim:
            claimName: tiered-storage-oss
    kafkaContainer:
      volumeMounts:
        - name: tiered-storage-oss
          mountPath: /mnt/tiered-storage/
      env:
        - name: JAVA_TOOL_OPTIONS
          value: "--add-modules=jdk.httpserver "
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-cluster
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    template:
      pod:
        imagePullSecrets:
          - name: acr-1999
    version: 4.0.0
    metadataVersion: 4.0-IV3

    # 1. Reference the custom-built image containing the Aiven tiered storage plugin.
    image: crpi-umhpg8dvg5qptjum.cn-beijing.personal.cr.aliyuncs.com/prod-scoox/kafka:4.0.0-2
    # image: quay.io/strimzi/kafka:0.47.0-kafka-4.0.0
    # 2. Tiered Storage configuration as per the official documentation's structure.
    tieredStorage:
      type: custom
      remoteStorageManager:
        className: io.aiven.kafka.tieredstorage.RemoteStorageManager
        classPath: /opt/kafka/plugins/tiered-storage-aiven/*
        config:
          storage.backend.class: io.aiven.kafka.tieredstorage.storage.filesystem.FileSystemStorage
          storage.root: /mnt/tiered-storage/
          storage.overwrite.enabled: "true"
          chunk.size: "4194304"

    # 3. General Kafka broker configuration.
    config:
      # --- Standard Kafka Configs ---
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2

      # --- Tiered Storage Master Switch & RLMM Config ---
      # This is the main switch to enable JEP-405 Tiered Storage.
      remote.log.storage.system.enable: "true"
      
      # Per docs, RLMM-specific configs go here, prefixed with 'rlmm.config.'.
      rlmm.config.remote.log.metadata.topic.replication.factor: 3
      
      # --- Other Tiered Storage Behavior Tuning ---
      # Tiered storage tunning
      remote.log.manager.task.interval.ms: 5000
      log.retention.check.interval.ms: 300000 # Delete segments every 300 seconds
      remote.log.index.file.size.bytes: 10485760
      
      # --- Performance tuning for tiered storage ---
      # Based on production best practices, using 512MB segment size for better performance
      remote.log.segment.size.bytes: 536870912
      remote.log.storage.manager.thread.pool.size: 10
      remote.log.metadata.manager.thread.pool.size: 10
      
      # --- Enable tiered storage by default for all topics ---
      remote.storage.enable: "true"
      local.retention.ms: 600000 # 10 minutes
      retention.ms: 604800000 # 7 days
      
      # --- Additional production best practices ---
      # Optimize for high-throughput environments
      replica.lag.time.max.ms: 30000
      replica.fetch.wait.max.ms: 500
      
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      
  entityOperator:
    topicOperator: {}
    userOperator: {}
